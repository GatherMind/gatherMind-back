spring:
  profiles:
    active: local
    group:
      local: local, common
      blue: blue, common
      green: green, common

server:
  env: blue

---

spring:
  config:
    activate:
      on-profile: local

server:
  port: 8080  # 서버 포트 설정
  serverAddress: localhost


serverName: local_server
---
spring:
  config:
    activate:
      on-profile: blue

  datasource:
    url: jdbc:h2:mem:testdb;MODE=MySQL
    driver-class-name: org.h2.Driver
    username: sa
    password: 51234   # 비밀번호를 설정하거나 빈 문자열로 두기
  h2:
    console:
      enabled: true  # H2 콘솔 활성화
      path: /h2-console  # H2 콘솔 경로 (기본: /h2-console)
      settings:
        web-allow-others: true

server:
  port: 8080  # 서버 포트 설정
  serverAddress: 3.37.250.123


serverName: blue_server
---
spring:
  config:
    activate:
      on-profile: green

server:
  port: 8081  # 서버 포트 설정
  serverAddress: 3.37.250.123


serverName: green_server
---

spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:h2:mem:testdb;MODE=MySQL
    driver-class-name: org.h2.Driver
    username: sa
    password:   # 비밀번호를 설정하거나 빈 문자열로 두기
  h2:
    console:
      enabled: true  # H2 콘솔 활성화
      path: /h2-console  # H2 콘솔 경로 (기본: /h2-console)

  jpa:
    hibernate:
      ddl-auto: update  # 애플리케이션 시작 시 테이블 자동 생성
#    show-sql: true  # SQL 쿼리 출력

    properties:
          hibernate:
            dialect: org.hibernate.dialect.H2Dialect
            format_sql: true
  mail:
    host: smtp.gmail.com
    port: 587
    username: test
    password: ldefurjjanpjgjri
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${OAUTH2_GOOGLE_CLIENT_ID}
            client-secret: ${OAUTH2_GOOGLE_CLIENT_SECRET}
            scope: openid, profile, email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-authentication-method: post
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo

logging:
  level:
    root: INFO
    woongjin.gatherMind: DEBUG
    org.springframework.security: DEBUG
#    org:
#      hibernate:
#        SQL: DEBUG
#        type:
#          descriptor:
#            sql:
#              BasicBinder: TRACE